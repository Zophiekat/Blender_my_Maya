<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>B_grp_background</class>
 <widget class="QGroupBox" name="B_grp_background">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>471</width>
    <height>324</height>
   </rect>
  </property>
  <property name="font">
   <font>
    <family>DejaVu Sans</family>
   </font>
  </property>
  <property name="mouseTracking">
   <bool>true</bool>
  </property>
  <property name="tabletTracking">
   <bool>true</bool>
  </property>
  <property name="focusPolicy">
   <enum>Qt::FocusPolicy::NoFocus</enum>
  </property>
  <property name="windowTitle">
   <string>GroupBox</string>
  </property>
  <property name="styleSheet">
   <string notr="true">QGroupBox#B_grp_background{
	background-color: rgba(100, 100, 100, 255);

}</string>
  </property>
  <property name="flat">
   <bool>false</bool>
  </property>
  <widget class="QCheckBox" name="B_CheckBox">
   <property name="geometry">
    <rect>
     <x>100</x>
     <y>10</y>
     <width>18</width>
     <height>18</height>
    </rect>
   </property>
   <property name="minimumSize">
    <size>
     <width>18</width>
     <height>18</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>18</width>
     <height>18</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">QCheckBox {
    border-radius: 4px;
}

QCheckBox::indicator {
    width: 12px;
    height: 12px;
    border: 1px solid #3D3D3D;

    border-radius: 4px;
    border-style: solid;
    padding: 2px; /* Ensure consistent padding */
}

QCheckBox::indicator:checked {
    background-color: #4F6FAE;
    image: url(:/icons/blender_icon_checkmark.png);
    background-position: center;
    background-repeat: no-repeat;
}

QCheckBox::indicator:unchecked {
    background-color: #545454;
}

QCheckBox::indicator:unchecked:hover {
    background-color: #656565;
}
</string>
   </property>
   <property name="text">
    <string/>
   </property>
   <property name="checked">
    <bool>true</bool>
   </property>
  </widget>
  <widget class="QLabel" name="label">
   <property name="geometry">
    <rect>
     <x>10</x>
     <y>10</y>
     <width>81</width>
     <height>16</height>
    </rect>
   </property>
   <property name="font">
    <font>
     <family>DejaVu Sans</family>
     <pointsize>11</pointsize>
     <italic>false</italic>
     <bold>false</bold>
     <kerning>false</kerning>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">font: 400 11pt &quot;DejaVu Sans&quot;;

color: #989898</string>
   </property>
   <property name="text">
    <string>Disabled Text</string>
   </property>
   <property name="textFormat">
    <enum>Qt::TextFormat::PlainText</enum>
   </property>
   <property name="wordWrap">
    <bool>false</bool>
   </property>
  </widget>
  <widget class="QLabel" name="label_2">
   <property name="geometry">
    <rect>
     <x>10</x>
     <y>30</y>
     <width>81</width>
     <height>16</height>
    </rect>
   </property>
   <property name="font">
    <font>
     <family>DejaVu Sans</family>
     <pointsize>11</pointsize>
     <italic>false</italic>
     <bold>false</bold>
     <kerning>false</kerning>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">font: 400 11pt &quot;DejaVu Sans&quot;;

color: #FDFDFD</string>
   </property>
   <property name="text">
    <string>Enabled Text</string>
   </property>
   <property name="textFormat">
    <enum>Qt::TextFormat::PlainText</enum>
   </property>
   <property name="wordWrap">
    <bool>false</bool>
   </property>
  </widget>
  <widget class="QGroupBox" name="groupBox">
   <property name="geometry">
    <rect>
     <x>20</x>
     <y>140</y>
     <width>161</width>
     <height>81</height>
    </rect>
   </property>
   <property name="styleSheet">
    <string notr="true">    background-color: #1E1E1E;
    border-style: solid;
    border-width: 1px;
    border-radius: 6px;
    border-color: #292929;

</string>
   </property>
   <property name="title">
    <string/>
   </property>
  </widget>
  <widget class="QSlider" name="horizontalSlider">
   <property name="geometry">
    <rect>
     <x>10</x>
     <y>50</y>
     <width>186</width>
     <height>16</height>
    </rect>
   </property>
   <property name="mouseTracking">
    <bool>true</bool>
   </property>
   <property name="tabletTracking">
    <bool>true</bool>
   </property>
   <property name="focusPolicy">
    <enum>Qt::FocusPolicy::NoFocus</enum>
   </property>
   <property name="styleSheet">
    <string notr="true">QSlider::groove:horizontal {
    background-color: #000000;
    border-style: solid;
    border-width: 1px;
    border-radius: 6px;
    border-color: #292929;

}

QSlider::handle:horizontal {
	background-color: rgba(255, 255, 255, 25);
    border: 1px solid #5c5c5c;
    width: 24px;
    margin: 0px 0; /* handle is placed by default on the contents rect of the groove. Expand outside the groove */
    border-radius: 3px;
}

QSlider::add-page:horizontal {
    background-color: #555555;
    border-style: solid;
    border-width: 1px;
    border-radius: 4px;
    border-color: #292929;


}

QSlider::sub-page:horizontal {
    background-color: #4F6FAE;
    border-style: solid;
    border-width: 1px;
    border-radius: 4px;
    border-color: #292929;

}</string>
   </property>
   <property name="singleStep">
    <number>10</number>
   </property>
   <property name="pageStep">
    <number>10</number>
   </property>
   <property name="tracking">
    <bool>true</bool>
   </property>
   <property name="orientation">
    <enum>Qt::Orientation::Horizontal</enum>
   </property>
   <property name="tickInterval">
    <number>0</number>
   </property>
  </widget>
  <widget class="QPushButton" name="B_Dropdown">
   <property name="geometry">
    <rect>
     <x>130</x>
     <y>10</y>
     <width>22</width>
     <height>22</height>
    </rect>
   </property>
   <property name="minimumSize">
    <size>
     <width>22</width>
     <height>22</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>22</width>
     <height>22</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
    image: url(:/icons/blender_icon_downarrow_hlt.png);
    border: 1px solid #3D3D3D;

    border-radius: 4px;



    border-style: solid;
    background-color: #495F8B;
    width: 18px;
    height: 18px;
}

QPushButton:!checked {
    background-color: #2C2C2C;
}

QPushButton:!checked:hover {
    background-color: #333333;
}
</string>
   </property>
   <property name="text">
    <string/>
   </property>
   <property name="iconSize">
    <size>
     <width>16</width>
     <height>16</height>
    </size>
   </property>
   <property name="checkable">
    <bool>true</bool>
   </property>
   <property name="checked">
    <bool>false</bool>
   </property>
  </widget>
  <widget class="QCheckBox" name="OpenPanel_Overlays_2">
   <property name="geometry">
    <rect>
     <x>200</x>
     <y>10</y>
     <width>22</width>
     <height>22</height>
    </rect>
   </property>
   <property name="minimumSize">
    <size>
     <width>22</width>
     <height>22</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>22</width>
     <height>22</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">QCheckBox {

	border-radius: 4px;

}

QCheckBox::indicator {
	
	image: url(:/icons/blender_icon_downarrow_hlt.png);
	border: 1px solid #3D3D3D;

	border-radius: 4px;
	border-top-left-radius: 0px;
	border-bottom-left-radius: 0px;
	border-right-width: 1px;
	border-style: solid;
	background-color: #495F8B;
    width: 18px;
    height: 18px;
}

QCheckBox::indicator:unchecked {
	background-color: #2C2C2C;
}

QCheckBox::indicator:unchecked:hover {
	background-color: #333333;
}</string>
   </property>
   <property name="text">
    <string/>
   </property>
   <property name="iconSize">
    <size>
     <width>16</width>
     <height>16</height>
    </size>
   </property>
   <property name="checkable">
    <bool>true</bool>
   </property>
   <property name="checked">
    <bool>false</bool>
   </property>
  </widget>
  <widget class="QCheckBox" name="Button_ViewportXray">
   <property name="geometry">
    <rect>
     <x>170</x>
     <y>10</y>
     <width>22</width>
     <height>22</height>
    </rect>
   </property>
   <property name="minimumSize">
    <size>
     <width>22</width>
     <height>22</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>22</width>
     <height>22</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">QCheckBox {

	border-radius: 4px;

}

QCheckBox::indicator {
	
	image: url(:/icons/blender_icon_xray.png);
	border: 1px solid #3D3D3D;

	border-radius: 4px;
	border-style: solid;
	background-color: #4F6FAE;
    width: 18px;
    height: 18px;
}

QCheckBox::indicator:unchecked {
	background-color: #545454
}

QCheckBox::indicator:unchecked:hover {
	background-color: #656565
}</string>
   </property>
   <property name="text">
    <string/>
   </property>
   <property name="checked">
    <bool>false</bool>
   </property>
  </widget>
  <widget class="QComboBox" name="comboBox_2">
   <property name="geometry">
    <rect>
     <x>60</x>
     <y>90</y>
     <width>91</width>
     <height>22</height>
    </rect>
   </property>
   <property name="styleSheet">
    <string notr="true">QComboBox {
    background-color: #2d2c2c;
    border: 2px solid #888888;
    border-radius: 6px;
    padding: 0px 5px; /* Adjust padding for text spacing */
    font-size: 14px;
    color: #ffffff;
}

QComboBox::drop-down {
    width: 30px;
    background-color: transparent;
    border: none;
    border-radius: 6px; /* Rounded corners for the drop-down container */
}

QComboBox::down-arrow {
    width: 14px;
    height: 14px;
}

QComboBox QAbstractItemView {
    background-color: #2d2c2c; /* Same color as combo box for consistent look */
    border: 1px solid #888888;
    border-radius: 6px; /* Apply rounded corners to the entire drop-down */
    margin: 0px;
    padding: 0px;
}

QComboBox QAbstractItemView::item {
    background-color: transparent;
    border-radius: 6px; /* Rounded corners for each item */
    margin: 0px; /* Ensure no extra margin around the item */
    padding: 5px;
}

QComboBox QAbstractItemView::item:hover {
    background-color: #3d3c3c; /* Hover effect */
    border-radius: 6px; /* Ensure rounded corners when hovered */
}

QComboBox QAbstractItemView::item:selected {
    background-color: #888888;
    color: #f0f0f0;
    border-radius: 6px; /* Ensure rounded corners when selected */
}

QComboBox:focus {
    border: 2px solid #888888;
    border-radius: 6px;
    background-color: #2d2c2c;
}
</string>
   </property>
   <property name="iconSize">
    <size>
     <width>16</width>
     <height>16</height>
    </size>
   </property>
   <item>
    <property name="text">
     <string>DEF</string>
    </property>
   </item>
   <item>
    <property name="text">
     <string>RIG</string>
    </property>
   </item>
   <item>
    <property name="text">
     <string>CTR</string>
    </property>
   </item>
   <item>
    <property name="text">
     <string>TWK</string>
    </property>
   </item>
   <item>
    <property name="text">
     <string>DRV</string>
    </property>
   </item>
   <item>
    <property name="text">
     <string>None</string>
    </property>
   </item>
  </widget>
  <widget class="QComboBox" name="comboBox_3">
   <property name="geometry">
    <rect>
     <x>200</x>
     <y>180</y>
     <width>91</width>
     <height>22</height>
    </rect>
   </property>
   <property name="font">
    <font>
     <family>.AppleSystemUIFont</family>
     <kerning>false</kerning>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QComboBox {
    /*background-color: #2D2C2C;*/
	/*border: 1px solid #3D3D3D;*/
    border-width: 1px;
	border-style: solid;
	border-radius: 4px;
	border-color: rgba(255, 255, 255, 255);

    /*padding-left: 6px;*/

}
QComboBox::down-arrow {
	/*border-radius: 4px;*/
    /*padding-right: 6px;*/
    image: url(:/icons/blender_icon_downarrow_hlt.png);
    width: 18px; /* Set the width of the down arrow */
    height: 18px; /* Set the height of the down arrow */
}
QComboBox::down-arrow:on {
	/*border-radius: 4px;*/
    /*background-color: #2D2C2C;*/
}
QComboBox::drop-down {
	/*background-color: rgba(128, 128, 255, 0);*/
	border-style: solid;
	/*border-width: 1px;*/
	/*border-radius: 4px;*/

}

QComboBox ::item {
	background-color: rgba(255, 255, 255, 255);

}

QComboBox QAbstractItemView {
	
	background-color: #1E1E1E;

	/*hover text color*/
	selection-color: #FDFDFD;

	/*hover background color*/ /*#4F6FAE*/ /*rgba(79, 111, 174, 255);*/
	selection-background-color: rgba(79, 111, 174, 255);

	alternate-background-color: rgb(255, 255, 255);
	/*width: 1px;*/
	/*radius: 4px;*/
	/*border: 1px solid #1E1E1E;*/
	border-style: solid;
	border-width: 4px;
	border-radius: 6px;
	border-color: rgba(170, 0, 0, 255);
	margin: 0px;
	padding: 0px;

}
</string>
   </property>
   <property name="iconSize">
    <size>
     <width>16</width>
     <height>16</height>
    </size>
   </property>
   <item>
    <property name="text">
     <string>DEF</string>
    </property>
   </item>
   <item>
    <property name="text">
     <string>RIG</string>
    </property>
   </item>
   <item>
    <property name="text">
     <string>CTR</string>
    </property>
   </item>
   <item>
    <property name="text">
     <string>TWK</string>
    </property>
   </item>
   <item>
    <property name="text">
     <string>DRV</string>
    </property>
   </item>
   <item>
    <property name="text">
     <string>None</string>
    </property>
   </item>
  </widget>
  <widget class="QComboBox" name="comboBox">
   <property name="geometry">
    <rect>
     <x>50</x>
     <y>100</y>
     <width>81</width>
     <height>22</height>
    </rect>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 1) Make the combo itself transparent */
QComboBox {
    background-color: rgba(255,255,255,0);
    border: none;
    padding: 4px;
}

/* 2) Remove the arrow-button background too, if you like */
QComboBox::drop-down {
    background: transparent;
    border: none;
}

/* 3) Target the popup list (a QAbstractItemView under the combo) */
QComboBox QAbstractItemView {
    /* kill the panel behind the items */
    background-color: rgba(0,0,0,0);
    border: none;
    outline: none;
    /* remove any native frame */
    margin: 0px;
    padding: 0px;
}

/* 4) Make each row transparent */
QComboBox QAbstractItemView::item {
    background-color: rgba(0,0,0,0);
    padding: 4px 8px;
}

/* 5) (Optional) If you want a visible hover/selection cue */
QComboBox QAbstractItemView::item:hover {
    background-color: rgba(255,255,255,30);
}
QComboBox QAbstractItemView::item:selected {
    background-color: rgba(255,255,255,50);
}
</string>
   </property>
   <item>
    <property name="text">
     <string>wiwiwi</string>
    </property>
   </item>
   <item>
    <property name="text">
     <string>uyaya</string>
    </property>
   </item>
   <item>
    <property name="text">
     <string>uwawa</string>
    </property>
   </item>
  </widget>
  <widget class="QGroupBox" name="Group">
   <property name="geometry">
    <rect>
     <x>270</x>
     <y>79</y>
     <width>91</width>
     <height>61</height>
    </rect>
   </property>
   <property name="title">
    <string/>
   </property>
   <property name="flat">
    <bool>true</bool>
   </property>
   <layout class="QGridLayout" name="gridLayout_3">
    <property name="leftMargin">
     <number>0</number>
    </property>
    <property name="topMargin">
     <number>0</number>
    </property>
    <property name="rightMargin">
     <number>0</number>
    </property>
    <property name="bottomMargin">
     <number>0</number>
    </property>
    <property name="spacing">
     <number>0</number>
    </property>
    <item row="0" column="0">
     <widget class="QFrame" name="Deco_BottomEdge">
      <property name="sizePolicy">
       <sizepolicy hsizetype="Expanding" vsizetype="Expanding">
        <horstretch>0</horstretch>
        <verstretch>0</verstretch>
       </sizepolicy>
      </property>
      <property name="styleSheet">
       <string notr="true">QFrame {
	background-color: rgba(0, 0, 0, 0);

	border-color: rgba(63, 63, 63, 255);
	border-style: solid;
	border-width: 0px;
	
	/*	Border Bottom Color. 	Hex: #2A2A2A	RGBA(42, 42, 42, 255)*/
	border-bottom-color: rgba(42, 42, 42, 255);
	border-bottom-width: 1px;
	border-radius: 5px;

}</string>
      </property>
      <property name="frameShape">
       <enum>QFrame::Shape::StyledPanel</enum>
      </property>
      <property name="frameShadow">
       <enum>QFrame::Shadow::Raised</enum>
      </property>
      <layout class="QGridLayout" name="gridLayout_2">
       <property name="leftMargin">
        <number>0</number>
       </property>
       <property name="topMargin">
        <number>0</number>
       </property>
       <property name="rightMargin">
        <number>0</number>
       </property>
       <property name="bottomMargin">
        <number>0</number>
       </property>
       <item row="1" column="0">
        <widget class="QFrame" name="Deco_Border">
         <property name="sizePolicy">
          <sizepolicy hsizetype="Expanding" vsizetype="Expanding">
           <horstretch>0</horstretch>
           <verstretch>0</verstretch>
          </sizepolicy>
         </property>
         <property name="minimumSize">
          <size>
           <width>0</width>
           <height>28</height>
          </size>
         </property>
         <property name="styleSheet">
          <string notr="true">QFrame {
	background-color: rgba(0, 0, 0, 0);

	border-color: rgba(63, 63, 63, 255);
	border-style: solid;
	border-width: 1px;
	border-radius: 4px;
	
}</string>
         </property>
         <property name="frameShape">
          <enum>QFrame::Shape::StyledPanel</enum>
         </property>
         <property name="frameShadow">
          <enum>QFrame::Shadow::Raised</enum>
         </property>
         <layout class="QGridLayout" name="gridLayout">
          <property name="leftMargin">
           <number>0</number>
          </property>
          <property name="topMargin">
           <number>0</number>
          </property>
          <property name="rightMargin">
           <number>0</number>
          </property>
          <property name="bottomMargin">
           <number>0</number>
          </property>
          <item row="0" column="0">
           <widget class="QPushButton" name="Button">
            <property name="sizePolicy">
             <sizepolicy hsizetype="Expanding" vsizetype="Expanding">
              <horstretch>0</horstretch>
              <verstretch>0</verstretch>
             </sizepolicy>
            </property>
            <property name="styleSheet">
             <string notr="true">QPushButton {
	color: rgba(228, 228, 228, 255);
	background-color: rgba(84, 84, 84, 255);


	border-color: rgba(84, 84, 84, 255);
	border-style: solid;
	border-width: 0px;
	border-radius: 3px;
	

    font: mono 14px;
}</string>
            </property>
            <property name="text">
             <string>PushButton</string>
            </property>
           </widget>
          </item>
         </layout>
        </widget>
       </item>
      </layout>
     </widget>
    </item>
   </layout>
  </widget>
 </widget>
 <resources>
  <include location="../icons/icons.qrc"/>
 </resources>
 <connections/>
</ui>
